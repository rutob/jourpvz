namespace SpriteKind {
    export const Indicator = SpriteKind.create()
    export const OtherIcons = SpriteKind.create()
    export const Tower = SpriteKind.create()
    export const Blast = SpriteKind.create()
}
function UpdateIndicator () {
    grid.place(indCursor, tiles.getTileLocation(selectedPlantNumber, 0))
    textPrice.setText(convertToText(sprites.readDataNumber(listPlantIndicator[selectedPlantNumber], "price")))
    textCoolDown.setText(convertToText(sprites.readDataNumber(listPlantIndicator[selectedPlantNumber], "count_cooldown")))
}
function updatePlantCD () {
    for (let index = 0; index <= listPeashooter.length - 1; index++) {
        tempSprite = listPeashooter[index]
        sprites.changeDataNumberBy(tempSprite, "countdown", -1)
        if (sprites.readDataNumber(tempSprite, "countdown") <= 0) {
            sprites.setDataNumber(tempSprite, "countdown", 3)
            projectile = sprites.createProjectileFromSprite(img`
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . 6 6 6 . . . . . . 
                . . . . . 6 6 6 5 6 6 . . . . . 
                . . . . 6 7 7 7 8 8 1 6 6 . . . 
                . . . . 7 7 7 7 8 8 1 5 6 . . . 
                . . . 6 7 7 7 8 8 8 8 5 6 6 . . 
                . . . 6 6 7 8 8 6 6 6 6 6 6 . . 
                . . . 6 8 7 8 8 6 6 6 6 6 6 . . 
                . . . . 6 7 7 8 6 6 6 8 6 . . . 
                . . . . . 8 8 8 8 8 8 6 . . . . 
                . . . . . 6 6 8 8 8 6 . . . . . 
                . . . . . . . 6 6 6 . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                `, tempSprite, 50, 0)
            projectile.setFlag(SpriteFlag.AutoDestroy, true)
        }
    }
    for (let index2 = 0; index2 <= listSunflower.length - 1; index2++) {
        tempSprite = listSunflower[index2]
        sprites.changeDataNumberBy(tempSprite, "countdown", -1)
        if (sprites.readDataNumber(tempSprite, "countdown") <= 0) {
            sprites.setDataNumber(tempSprite, "countdown", 7)
            mySprite2 = sprites.create(img`
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . b . . . . . . . 
                . . . . . . . b d b . . . . . . 
                . . . . . . . c d c . . . . . . 
                . . . . . . . c 5 c . . . . . . 
                . . . . . . c d 5 d c . . . . . 
                . . . b c c d 5 5 5 d c c b . . 
                . . b d d 5 5 5 5 5 5 5 d d b . 
                . . . b c c d 5 5 5 d c c b . . 
                . . . . . . c d 5 d c . . . . . 
                . . . . . . . c 5 c . . . . . . 
                . . . . . . . c d c . . . . . . 
                . . . . . . . b d b . . . . . . 
                . . . . . . . . b . . . . . . . 
                . . . . . . . . . . . . . . . . 
                `, SpriteKind.Food)
            animation.runImageAnimation(
            mySprite2,
            [img`
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . b . . . . . . . 
                . . . . . . . b d b . . . . . . 
                . . . . . . . c d c . . . . . . 
                . . . . . . . c 5 c . . . . . . 
                . . . . . . c d 5 d c . . . . . 
                . . . b c c d 5 5 5 d c c b . . 
                . . b d d 5 5 5 5 5 5 5 d d b . 
                . . . b c c d 5 5 5 d c c b . . 
                . . . . . . c d 5 d c . . . . . 
                . . . . . . . c 5 c . . . . . . 
                . . . . . . . c d c . . . . . . 
                . . . . . . . b d b . . . . . . 
                . . . . . . . . b . . . . . . . 
                . . . . . . . . . . . . . . . . 
                `,img`
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . b d b . . . . . . 
                . . . . . . . b d b c . . . . . 
                . . . . b b c 5 5 5 c b b . . . 
                . . . . b 5 5 5 1 5 5 5 b . . . 
                . . . c c 5 5 5 1 5 5 5 c c . . 
                . . b b 5 5 5 1 1 1 5 5 5 b b . 
                . . d d 5 1 1 1 1 1 1 1 5 d d . 
                . . b b 5 5 5 1 1 1 5 5 5 b b . 
                . . . c c 5 5 5 1 5 5 5 c c . . 
                . . . . b 5 5 5 1 5 5 5 b . . . 
                . . . . b b c 5 5 5 c b b . . . 
                . . . . . . c b d b c . . . . . 
                . . . . . . . b d b . . . . . . 
                . . . . . . . . . . . . . . . . 
                `],
            500,
            true
            )
            sprites.setDataNumber(mySprite2, "countdown", 4)
            mySprite2.setPosition(tempSprite.x, tempSprite.y)
            listSun.push(mySprite2)
        }
    }
    for (let index3 = 0; index3 <= listPotatomine.length - 1; index3++) {
        tempSprite = listPotatomine[index3]
        if (sprites.readDataNumber(tempSprite, "countdown") >= 0) {
            sprites.changeDataNumberBy(tempSprite, "countdown", -1)
        }
        if (sprites.readDataNumber(tempSprite, "countdown") == 0) {
            animation.runImageAnimation(
            tempSprite,
            [img`
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . 4 e e e . . . . . . 
                . . . . . e e e e e e . . . . . 
                . . . . . . . c c . . . . . . . 
                . . . . . . . 4 c . . . . . . . 
                . . . . . . 4 4 4 4 . . . . . . 
                . . . . . 4 4 4 4 4 4 4 . . . . 
                . . . 4 4 4 4 f 4 4 f 4 4 . . . 
                . . e 4 4 4 4 f 4 4 f 4 4 4 . . 
                . e 4 4 4 4 4 4 4 4 4 4 4 4 c . 
                . e 4 4 4 4 4 4 4 4 4 4 4 4 4 . 
                . e 4 4 4 4 4 4 4 4 4 4 4 4 c . 
                . . e e 4 4 4 4 4 4 4 c c c . . 
                . . . . e e e e e e c c . . . . 
                . . . . . . . . . . . . . . . . 
                `,img`
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . 2 2 e e . . . . . . 
                . . . . . e e e e e e . . . . . 
                . . . . . . . 4 c . . . . . . . 
                . . . . . . . 4 4 . . . . . . . 
                . . . . . . 4 4 4 4 . . . . . . 
                . . . . 4 4 4 4 4 4 4 4 . . . . 
                . . . 4 4 4 f 4 4 f 4 4 4 . . . 
                . . e 4 4 4 f 4 4 f 4 4 4 4 . . 
                . e 4 4 4 4 4 4 4 4 4 4 4 4 c . 
                . e 4 4 4 4 4 4 4 4 4 4 4 4 4 . 
                . e 4 4 4 4 4 4 4 4 4 4 4 4 c . 
                . . e e 4 4 4 4 4 4 4 c c c . . 
                . . . . e e e e e e c c . . . . 
                . . . . . . . . . . . . . . . . 
                `],
            500,
            true
            )
        }
    }
    for (let index32 = 0; index32 <= listCherrybomb.length - 1; index32++) {
        tempSprite = listCherrybomb[index32]
        sprites.changeDataNumberBy(tempSprite, "countdown", -1)
    }
    if (listCherrybomb.length > 0) {
        tempSprite = listCherrybomb[0]
        if (sprites.readDataNumber(tempSprite, "countdown") <= 0) {
            listCherrybomb.shift()
            mySprite2 = sprites.create(img`
                . . 3 3 . . . 3 3 . . . . . . . 
                . 3 1 1 2 . . 3 1 3 . . 3 3 3 . 
                . 3 1 1 2 . . 3 1 3 . 3 1 1 3 . 
                . . 3 2 2 . . 2 1 2 . 2 1 1 3 . 
                . 3 3 . . . . . 2 2 . 2 2 2 . . 
                3 1 1 2 2 . . . . . . . 3 3 . . 
                3 1 1 1 2 . . . . . . 2 1 1 3 3 
                3 1 1 2 . . . . . . 3 1 1 1 1 3 
                . 3 2 2 . . . . . . . 2 1 1 3 . 
                . . . . . . . 2 . . . . 3 3 . . 
                . . 2 2 2 . 2 1 2 . . 2 2 2 . . 
                . 3 1 1 2 2 3 1 1 2 . 2 1 1 3 3 
                3 1 1 1 2 2 1 1 1 2 . 2 1 1 1 3 
                3 1 1 3 . . 3 1 3 . . . 3 1 1 3 
                3 3 3 . . . . 3 3 . . . . 3 3 . 
                . . . . . . . . . . . . . . . . 
                `, SpriteKind.Blast)
            sprites.setDataNumber(mySprite2, "countdown", 5)
            listBlast.push(mySprite2)
            mySprite2.setPosition(tempSprite.x - 8, tempSprite.y - 8)
            animation.runImageAnimation(
            mySprite2,
            [img`
                ................................
                ................................
                ................................
                ................................
                ................................
                ................................
                ................................
                ................................
                ................................
                ..........33...33...............
                .........3112..313..333.........
                .........3112..313.3113.........
                ..........322..212.2113.........
                .........33.....22.222..........
                ........31122.......33..........
                ........31112......21133........
                ........3112......311113........
                .........322.......2113.........
                ...............2....33..........
                ..........222.212..222..........
                .........311223112.21133........
                ........3111221112.21113........
                ........3113..313...3113........
                ........333....33....33.........
                ................................
                ................................
                ................................
                ................................
                ................................
                ................................
                ................................
                ................................
                `,img`
                ................................
                ................................
                ................................
                ................................
                ................................
                ................................
                .........33....333..............
                .........33....333..............
                ........31122..3113..3333.......
                ........31122..3113.31113.......
                .........3222..2112.21113.......
                .........3222..2112.21113.......
                ........33......222.2222........
                ......3311222........333........
                ......3311122.......211133......
                ......33112........3111113......
                ......33112........3111113......
                ........322.........21113.......
                ...............2.....333........
                .........2222.2122..2222........
                ........31122231112.211133......
                ........31122231112.211133......
                ......3311122211112.211113......
                ......33113...3133...33113......
                ......3333.....333.....33.......
                ................................
                ................................
                ................................
                ................................
                ................................
                ................................
                ................................
                `,img`
                ................................
                ................................
                ................................
                ................................
                ................................
                .........33.....333.............
                .........33.....333.............
                .........33.....333.............
                ........311222..3113...3333.....
                ........311222..3113..31113.....
                .........32222..2112..21113.....
                .........32222..2112..21113.....
                ........33.......222..2222......
                .....333112222.........333......
                .....333111222........211133....
                .....333112.........33111113....
                .....333112.........33111113....
                .....333112.........33111113....
                ........322...........21113.....
                ................2......333......
                .........22222.2122...2222......
                ........311222231112..211133....
                ........311222231112..211133....
                .....333111222211112..211113....
                .....333113....3133....33113....
                .....33333......333......33.....
                ................................
                ................................
                ................................
                ................................
                ................................
                ................................
                `,img`
                ................................
                ................................
                ................................
                .......33......3333.............
                .......33......3333.............
                .......33......3333.............
                .....3311222...31113...33333....
                .....3311222...31113...33333....
                .....3311222...31113.3311113....
                .......32222...21112.2211113....
                .......32222...21112.2211113....
                .......32222...21112.2211113....
                .....333........2222.222222.....
                ..3331112222...........3333.....
                ..3331111222.........22111133...
                ..3331111222.........22111133...
                ..3331112...........311111113...
                ..3331112...........311111113...
                ..3331112...........311111113...
                .....3322............2211113....
                ...............2.......3333.....
                .......22222.221222..222222.....
                .......22222.221222..222222.....
                .....331122223311112.22111133...
                .....331122223311112.22111133...
                ..333111122221111112.22111113...
                ..333111122221111112.22111113...
                ..3331113....331333....331113...
                ..333333.......3333......333....
                ................................
                ................................
                ................................
                `,img`
                ....3333......33333.............
                ....3333......33333.............
                ....3333......33333.............
                ....3333......33333.............
                ...31111222...3311133...3333333.
                ...31111222...3311133...3333333.
                ...31111222...3311133..31111133.
                ....3322222...2211122..21111133.
                ....3322222...2211122..21111133.
                ....3322222...2211122..21111133.
                ....3322222...2211122..21111133.
                ...333..........22222..222222...
                33311122222.............33333...
                33311122222.............33333...
                33311111222............211111333
                33311111222............211111333
                33311122.............33111111113
                33311122.............33111111113
                33311122.............33111111113
                ...32222...............21111133.
                ...32222...............21111133.
                ..............22........33333...
                ....2222222..211222....222222...
                ....2222222..211222....222222...
                ...311112222231111122..211111333
                ...311112222231111122..211111333
                ...311112222231111122..211111333
                333111112222211111122..211111113
                333111112222211111122..211111113
                33311133.....311333.....33331113
                33311133.....311333.....33331113
                333333........33333.........333.
                `,img`
                ....3333......33333.............
                ....3333......33333.............
                ....3333......33333.............
                ....3333......33333.............
                ...31111222...3311133...3333333.
                ...31111222...3311133...3333333.
                ...31111222...3311133..31111133.
                ....3322222...2211122..21111133.
                ....3322222...2211122..21111133.
                ....3322222...2211122..21111133.
                ....3322222...2211122..21111133.
                ...333..........22222..222222...
                33311122222.............33333...
                33311122222.............33333...
                33311111222............211111333
                33311111222............211111333
                33311122.............33111111113
                33311122.............33111111113
                33311122.............33111111113
                ...32222...............21111133.
                ...32222...............21111133.
                ..............22........33333...
                ....2222222..211222....222222...
                ....2222222..211222....222222...
                ...311112222231111122..211111333
                ...311112222231111122..211111333
                ...311112222231111122..211111333
                333111112222211111122..211111113
                333111112222211111122..211111113
                33311133.....311333.....33331113
                33311133.....311333.....33331113
                333333........33333.........333.
                `,img`
                ....ffff......fffff.............
                ....ffff......fffff.............
                ....ffff......fffff.............
                ....ffff......fffff.............
                ...feeee222...ffeeeff...fffffff.
                ...feeee222...ffeeeff...fffffff.
                ...feeee222...ffeeeff..feeeeeff.
                ....ff22222...22eee22..2eeeeeff.
                ....ff22222...22eee22..2eeeeeff.
                ....ff22222...22eee22..2eeeeeff.
                ....ff22222...22eee22..2eeeeeff.
                ...fff..........22222..222222...
                fffeee22222.............fffff...
                fffeee22222.............fffff...
                fffeeeee222............2eeeeefff
                fffeeeee222............2eeeeefff
                fffeee22.............ffeeeeeeeef
                fffeee22.............ffeeeeeeeef
                fffeee22.............ffeeeeeeeef
                ...32222...............2eeeeeff.
                ...32222...............2eeeeeff.
                ..............22........fffff...
                ....2222222..2ee222....222222...
                ....2222222..2ee222....222222...
                ...feeee22222feeeee22..2eeeeefff
                ...feeee22222feeeee22..2eeeeefff
                ...feeee22222feeeee22..2eeeeefff
                fffeeeee22222eeeeee22..2eeeeeeef
                fffeeeee22222eeeeee22..2eeeeeeef
                fffeeeff.....feefff.....ffffeeef
                fffeeeff.....feefff.....ffffeeef
                ffffff........fffff.........fff.
                `],
            500,
            false
            )
            sprites.destroy(tempSprite, effects.spray, 500)
        }
    }
    for (let index4 = 0; index4 <= listBlast.length - 1; index4++) {
        tempSprite = listBlast[index4]
        sprites.changeDataNumberBy(tempSprite, "countdown", -1)
    }
    if (listBlast.length > 0) {
        tempSprite = listBlast[0]
        if (sprites.readDataNumber(tempSprite, "countdown") <= 0) {
            listBlast.shift()
            sprites.destroy(tempSprite)
        }
    }
}
controller.B.onEvent(ControllerButtonEvent.Pressed, function () {
    selectedPlantNumber += 1
    selectedPlantNumber = selectedPlantNumber % 5
    UpdateIndicator()
})
sprites.onOverlap(SpriteKind.Blast, SpriteKind.Enemy, function (sprite, otherSprite) {
    listEnemy.removeAt(listEnemy.indexOf(otherSprite))
    sprites.destroy(otherSprite, effects.ashes, 500)
})
controller.A.onEvent(ControllerButtonEvent.Pressed, function () {
    grid.snap(Cursor)
    if (buyPlant()) {
        music.play(music.melodyPlayable(music.knock), music.PlaybackMode.InBackground)
    } else {
        music.play(music.melodyPlayable(music.smallCrash), music.PlaybackMode.InBackground)
    }
})
function checkGridPlanted (row: number, col: number) {
    for (let value of sprites.allOfKind(SpriteKind.Tower)) {
        if (row == sprites.readDataNumber(value, "row") && col == sprites.readDataNumber(value, "col")) {
            return true
        }
    }
    return false
}
function updateEnemyCD () {
    enemyAppearCD += -1
    if (enemyAppearCD <= 0) {
        enemyAppearCD = 4
        mySprite = sprites.create(img`
            . . . . c c c c c c . . . . . . 
            . . . c 6 7 7 7 7 6 c . . . . . 
            . . c 7 7 7 7 7 7 7 7 c . . . . 
            . c 6 7 7 7 7 7 7 7 7 6 c . . . 
            . c 7 c 6 6 6 6 c 7 7 7 c . . . 
            . f 7 6 f 6 6 f 6 7 7 7 f . . . 
            . f 7 7 7 7 7 7 7 7 7 7 f . . . 
            . . f 7 7 7 7 6 c 7 7 6 f c . . 
            . . . f c c c c 7 7 6 f 7 7 c . 
            . . c 7 2 7 7 7 6 c f 7 7 7 7 c 
            . c 7 7 2 7 7 c f c 6 7 7 6 c c 
            c 1 1 1 1 7 6 f c c 6 6 6 c . . 
            f 1 1 1 1 1 6 6 c 6 6 6 6 f . . 
            f 6 1 1 1 1 1 6 6 6 6 6 c f . . 
            . f 6 1 1 1 1 1 1 6 6 6 f . . . 
            . . c c c c c c c c c f . . . . 
            `, SpriteKind.Enemy)
        animation.runImageAnimation(
        mySprite,
        [img`
            . . . . c c c c c c . . . . . . 
            . . . c 6 7 7 7 7 6 c . . . . . 
            . . c 7 7 7 7 7 7 7 7 c . . . . 
            . c 6 7 7 7 7 7 7 7 7 6 c . . . 
            . c 7 c 6 6 6 6 c 7 7 7 c . . . 
            . f 7 6 f 6 6 f 6 7 7 7 f . . . 
            . f 7 7 7 7 7 7 7 7 7 7 f . . . 
            . . f 7 7 7 7 6 c 7 7 6 f c . . 
            . . . f c c c c 7 7 6 f 7 7 c . 
            . . c 7 2 7 7 7 6 c f 7 7 7 7 c 
            . c 7 7 2 7 7 c f c 6 7 7 6 c c 
            c 1 1 1 1 7 6 f c c 6 6 6 c . . 
            f 1 1 1 1 1 6 6 c 6 6 6 6 f . . 
            f 6 1 1 1 1 1 6 6 6 6 6 c f . . 
            . f 6 1 1 1 1 1 1 6 6 6 f . . . 
            . . c c c c c c c c c f . . . . 
            `,img`
            . . . c c c c c c . . . . . . . 
            . . c 6 7 7 7 7 6 c . . . . . . 
            . c 7 7 7 7 7 7 7 7 c . . . . . 
            c 6 7 7 7 7 7 7 7 7 6 c . . . . 
            c 7 c 6 6 6 6 c 7 7 7 c . . . . 
            f 7 6 f 6 6 f 6 7 7 7 f . . . . 
            f 7 7 7 7 7 7 7 7 7 7 f . . . . 
            . f 7 7 7 7 6 c 7 7 6 f . . . . 
            . . f c c c c 7 7 6 f c c c . . 
            . . c 6 2 7 7 7 f c c 7 7 7 c . 
            . c 6 7 7 2 7 7 c f 6 7 7 7 7 c 
            . c 1 1 1 1 7 6 6 c 6 6 6 c c c 
            . c 1 1 1 1 1 6 6 6 6 6 6 c . . 
            . c 6 1 1 1 1 1 6 6 6 6 6 c . . 
            . . c 6 1 1 1 1 1 7 6 6 c c . . 
            . . . c c c c c c c c c c . . . 
            `],
        1000,
        true
        )
        sprites.setDataNumber(mySprite, "hp", 45)
        sprites.setDataBoolean(mySprite, "eating", false)
        mySprite.setVelocity(-2, 0)
        grid.place(mySprite, tiles.getTileLocation(9, randint(1, 5)))
        listEnemy.push(mySprite)
    }
}
function buyPlant () {
    tempSpriteIndicator = listPlantIndicator[selectedPlantNumber]
    if (checkGridPlanted(grid.spriteRow(Cursor), grid.spriteCol(Cursor))) {
        return false
    }
    if (sprites.readDataNumber(tempSpriteIndicator, "price") > suns || sprites.readDataNumber(tempSpriteIndicator, "count_cooldown") > 0) {
        return false
    }
    suns += 0 - sprites.readDataNumber(tempSpriteIndicator, "price")
    textSunCounter.setText(convertToText(suns))
    sprites.setDataNumber(tempSpriteIndicator, "count_cooldown", sprites.readDataNumber(tempSpriteIndicator, "max_cooldown"))
    if (0 == selectedPlantNumber) {
        tempSprite = sprites.create(img`
            ....................
            ....................
            .....fffff..........
            ...ff77777ff........
            ..f777777777ff...ff.
            .f7777777ff777fff7f.
            .f7777777777777777f.
            .f7777ff777777777f..
            .f777777777777777f..
            .f7777777777777777f.
            ..f777777777ffff77f.
            ...f7777777f....ff..
            ....f7777ff.........
            .....fff7...........
            .......f7..777......
            ..7777..777777......
            ..7777777777........
            ......7777..........
            ....................
            ........77..........
            `, SpriteKind.Tower)
        animation.runImageAnimation(
        tempSprite,
        [img`
            ....................
            ....................
            .....fffff..........
            ...ff77777ff........
            ..f777777777ff...ff.
            .f7777777ff777fff7f.
            .f7777777777777777f.
            .f7777ff777777777f..
            .f777777777777777f..
            .f7777777777777777f.
            ..f777777777ffff77f.
            ...f7777777f....ff..
            ....f7777ff.........
            .....fff7...........
            .......f7..777......
            ..7777..777777......
            ..7777777777........
            ......7777..........
            ....................
            ........77..........
            `,img`
            ....................
            ....................
            ......fffff.........
            ....ff77777ff.......
            ...f777777777ff...ff
            ..f7777777ff777fff7f
            ..f7777777777777777f
            ..f7777ff777777777f.
            ..f777777777777777f.
            ..f7777777777777777f
            ...f777777777ffff77f
            ....f7777777f....ff.
            .....f7777ff........
            .....fff77..........
            .......f7..7777.....
            ....77..77777777....
            ...777777777........
            ...7..7777..........
            .........77.........
            .........77.........
            `,img`
            ....................
            ....................
            .....fffff..........
            ...ff77777ff........
            ..f777777777ff...ff.
            .f7777777ff777fff7f.
            .f7777777777777777f.
            .f7777ff777777777f..
            .f777777777777777f..
            .f7777777777777777f.
            ..f777777777ffff77f.
            ...f7777777f....ff..
            ....f7777ff.........
            .....fff7...........
            .......f7..777......
            ..7777..777777......
            ..7777777777........
            ......7777..........
            ....................
            ........77..........
            `,img`
            ....................
            ....................
            ....fffff...........
            ..ff77777ff.........
            .f777777777ff...ff..
            f7777777ff777fff7f..
            f7777777777777777f..
            f7777ff777777777f...
            f777777777777777f...
            f7777777777777777f..
            .f777777777ffff77f..
            ..f7777777f....ff...
            ...f7777f...........
            ....fff77f..7777....
            ......f77.7777......
            .77777..7777........
            ..777777777.........
            ......7777..........
            .......77...........
            ........7...........
            `],
        500,
        true
        )
        sprites.setDataString(tempSprite, "type", "Peashooter")
        sprites.setDataNumber(tempSprite, "countdown", 3)
        sprites.setDataNumber(tempSprite, "hp", 250)
        listPeashooter.push(tempSprite)
    } else if (1 == selectedPlantNumber) {
        tempSprite = sprites.create(img`
            ....................
            ....5...5..5...5....
            ....55..5..5..55....
            .....5........5.....
            .55....55555.....5..
            ..5..555555555..55..
            ....55544444555.....
            ....55444444455.....
            55..55444444455..55.
            ....55544444555.....
            .....555555555......
            ..55....555.....55..
            ......75.5.5........
            ......77.6..77......
            ......7777.77.......
            ......7777776.......
            .......77776........
            ........776.........
            ........77..........
            ........77..........
            `, SpriteKind.Tower)
        animation.runImageAnimation(
        tempSprite,
        [img`
            ....................
            ....5...5..5...5....
            ....55..5..5..55....
            .....5........5.....
            .55....55555.....5..
            ..5..555555555..55..
            ....55544444555.....
            ....55444444455.....
            55..55444444455..55.
            ....55544444555.....
            .....555555555......
            ..55....555.....55..
            ......75.5.5........
            ......77.6..77......
            ......7777.77.......
            ......7777776.......
            .......77776........
            ........776.........
            ........77..........
            ........77..........
            `,img`
            ....................
            .....5...5..5...5...
            .....55..5..5..55...
            ......5........5....
            ..55....55555.....5.
            ...5..555555555..55.
            .....55544444555....
            .....55444444455....
            .55..55444444455..55
            .....55544444555....
            ......555555555.....
            ...55....555.....55.
            .......75.5.5.......
            .......77.6..77.....
            ......7777.77.......
            ......7777776.......
            .......77776........
            ........776.........
            ........77..........
            ........77..........
            `,img`
            ....................
            ....5...5..5...5....
            ....55..5..5..55....
            .....5........5.....
            .55....55555.....5..
            ..5..555555555..55..
            ....55544444555.....
            ....55444444455.....
            55..55444444455..55.
            ....55544444555.....
            .....555555555......
            ..55....555.....55..
            ......75.5.5........
            ......77.6..77......
            ......7777.77.......
            ......7777776.......
            .......77776........
            ........776.........
            ........77..........
            ........77..........
            `,img`
            ....................
            ....................
            ...5...5..5...5.....
            ...55..5..5..55.....
            ....5........5......
            55....55555.....5...
            .5..555555555..55...
            ...55544444555......
            ...55444444455......
            5..55444444455..55..
            ...55544444555......
            ....555555555.......
            .55....555.....55...
            .....75.5.5.........
            .....77767.77.......
            ......7777776.......
            .......77776........
            ........776.........
            ........77..........
            ........77..........
            `],
        500,
        true
        )
        sprites.setDataString(tempSprite, "type", "Sunflower")
        sprites.setDataNumber(tempSprite, "countdown", 7)
        sprites.setDataNumber(tempSprite, "hp", 250)
        listSunflower.push(tempSprite)
    } else if (2 == selectedPlantNumber) {
        tempSprite = sprites.create(img`
            . . . . . . . . . . . 6 6 6 6 6 
            . . . . . . . . . 6 6 7 7 7 7 8 
            . . . . . . 8 8 8 7 7 8 8 6 8 8 
            . . e e e e c 6 6 8 8 . 8 7 8 . 
            . e 2 5 4 2 e c 8 . . . 6 7 8 . 
            e 2 4 2 2 2 2 2 c . . . 6 7 8 . 
            e 2 2 2 2 2 2 2 c . . . 8 6 8 . 
            e 2 e e 2 2 2 2 e e e e c 6 8 . 
            c 2 e e 2 2 2 2 e 2 5 4 2 c 8 . 
            . c 2 e e e 2 e 2 4 2 2 2 2 c . 
            . . c 2 2 2 e e 2 2 2 2 2 2 2 e 
            . . . e c c e c 2 2 2 2 2 2 2 e 
            . . . . . . . c 2 e e 2 2 e 2 c 
            . . . . . . . c e e e e e e 2 c 
            . . . . . . . . c e 2 2 2 2 c . 
            . . . . . . . . . c c c c c . . 
            `, SpriteKind.Tower)
        animation.runImageAnimation(
        tempSprite,
        [img`
            . . . . . . . . . . . 6 6 6 6 6 
            . . . . . . . . . 6 6 7 7 7 7 8 
            . . . . . . 8 8 8 7 7 8 8 6 8 8 
            . . e e e e c 6 6 8 8 . 8 7 8 . 
            . e 2 5 4 2 e c 8 . . . 6 7 8 . 
            e 2 4 2 2 2 2 2 c . . . 6 7 8 . 
            e 2 2 2 2 2 2 2 c . . . 8 6 8 . 
            e 2 e e 2 2 2 2 e e e e c 6 8 . 
            c 2 e e 2 2 2 2 e 2 5 4 2 c 8 . 
            . c 2 e e e 2 e 2 4 2 2 2 2 c . 
            . . c 2 2 2 e e 2 2 2 2 2 2 2 e 
            . . . e c c e c 2 2 2 2 2 2 2 e 
            . . . . . . . c 2 e e 2 2 e 2 c 
            . . . . . . . c e e e e e e 2 c 
            . . . . . . . . c e 2 2 2 2 c . 
            . . . . . . . . . c c c c c . . 
            `,img`
            . . . . . . . . 6 6 6 6 6 6 6 6 
            . . . . . . 6 7 7 7 7 7 7 7 7 8 
            . e e e e e c 6 7 7 7 8 8 6 7 8 
            . e 5 4 4 2 c 6 6 8 8 . 8 7 7 6 
            e 2 2 2 2 2 e c 8 . . 6 6 7 7 6 
            2 4 2 2 2 2 2 2 c . . 6 7 7 8 8 
            2 2 2 2 2 2 2 e e e e e c 6 8 . 
            2 e e 2 2 2 2 e 2 5 4 4 2 6 8 . 
            2 e e 2 2 2 2 e 4 2 2 2 2 c 8 . 
            c 2 e e e e e 2 4 2 2 2 2 2 c . 
            . c 2 2 2 e e 2 2 2 2 2 2 2 2 e 
            . . e c c c c 2 2 2 2 2 2 2 2 e 
            . . . . . c c 2 e e 2 2 2 e 2 c 
            . . . . . c c e e e e e e e 2 c 
            . . . . . . . c e 2 2 2 2 2 c . 
            . . . . . . . . c c c c c c . . 
            `],
        500,
        true
        )
        sprites.setDataString(tempSprite, "type", "Cherrybomb")
        sprites.setDataNumber(tempSprite, "countdown", 6)
        sprites.setDataNumber(tempSprite, "hp", 250)
        listCherrybomb.push(tempSprite)
    } else if (3 == selectedPlantNumber) {
        tempSprite = sprites.create(img`
            . . . . . . . . . . . . . . . . 
            . . . . . . c c c c . . . . . . 
            . . . . c c 4 4 4 4 c c . . . . 
            . . . . c 4 4 4 4 4 4 c . . . . 
            . . . c 4 5 5 4 4 5 5 4 c . . . 
            . . . c 4 5 5 4 4 5 5 4 c . . . 
            . . c d 4 4 4 4 4 4 4 4 d c . . 
            . . c d 4 4 4 4 4 4 4 4 d c . . 
            . . c 4 5 4 4 4 4 4 5 3 d c . . 
            . . c 4 4 5 4 4 4 5 5 b d c . . 
            . . c 4 4 5 5 5 5 b b b d c . . 
            . . c b 4 4 b b 4 b b 4 b c . . 
            . . . c 4 4 b b 4 4 4 5 c . . . 
            . . . . c b 5 5 5 5 b c . . . . 
            . . . . . c c c c c c . . . . . 
            . . . . . . . . . . . . . . . . 
            `, SpriteKind.Tower)
        animation.runImageAnimation(
        tempSprite,
        [img`
            . . . . . . . . . . . . . . . . 
            . . . . . . c c c c . . . . . . 
            . . . . c c 4 4 4 4 c c . . . . 
            . . . . c 4 4 4 4 4 4 c . . . . 
            . . . c 4 5 5 4 4 5 5 4 c . . . 
            . . . c 4 5 5 4 4 5 5 4 c . . . 
            . . c d 4 4 4 4 4 4 4 4 d c . . 
            . . c d 4 4 4 4 4 4 4 4 d c . . 
            . . c 5 5 4 4 4 4 4 4 5 d c . . 
            . . c 4 5 5 4 4 4 4 5 5 d c . . 
            . . c 4 4 5 5 5 5 5 b b d c . . 
            . . c b 4 4 b b 4 b b 4 b c . . 
            . . . c 4 4 b b 4 4 4 5 c . . . 
            . . . . c b 5 5 5 5 b c . . . . 
            . . . . . c c c c c c . . . . . 
            . . . . . . . . . . . . . . . . 
            `,img`
            . . . . . . . . . . . . . . . . 
            . . . . . . c c c c . . . . . . 
            . . . . c c 4 4 4 4 c c . . . . 
            . . . . c 4 4 4 4 4 4 c . . . . 
            . . . c 4 f f 4 4 f f 4 c . . . 
            . . . c 4 5 5 4 4 5 5 4 c . . . 
            . . c d 4 4 4 4 4 4 4 4 d c . . 
            . . c d 4 4 4 4 4 4 4 4 d c . . 
            . . c 4 5 4 4 4 4 4 5 3 d c . . 
            . . c 4 4 5 4 4 4 5 5 b d c . . 
            . . c 4 4 5 5 5 5 b b b d c . . 
            . . c b 4 4 b b 4 b b 4 b c . . 
            . . . c 4 4 b b 4 4 4 5 c . . . 
            . . . . c b 5 5 5 5 b c . . . . 
            . . . . . c c c c c c . . . . . 
            . . . . . . . . . . . . . . . . 
            `],
        500,
        true
        )
        sprites.setDataString(tempSprite, "type", "Wallnut")
        sprites.setDataNumber(tempSprite, "countdown", 0)
        sprites.setDataNumber(tempSprite, "hp", 1250)
        listWallnut.push(tempSprite)
    } else if (4 == selectedPlantNumber) {
        tempSprite = sprites.create(img`
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . 4 e e e . . . . . . 
            . . . . . e e e e e e . . . . . 
            . . . . . . . c c . . . . . . . 
            . . . . . . . 4 c . . . . . . . 
            . . . . . 4 4 4 4 4 4 . . . . . 
            . . e e 4 4 4 f 4 4 f 4 c . . . 
            . e 4 4 4 4 4 4 4 4 4 4 4 c c . 
            . e 4 4 4 4 4 4 4 4 4 4 4 4 c . 
            . . e e 4 4 4 4 4 4 4 c c c . . 
            `, SpriteKind.Tower)
        animation.runImageAnimation(
        tempSprite,
        [img`
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . 4 e e e . . . . . . 
            . . . . . e e e e e e . . . . . 
            . . . . . . . c c . . . . . . . 
            . . . . . . . 4 c . . . . . . . 
            . . . . . 4 4 4 4 4 4 . . . . . 
            . . e e 4 4 4 f 4 4 f 4 c . . . 
            . e 4 4 4 4 4 4 4 4 4 4 4 c c . 
            . e 4 4 4 4 4 4 4 4 4 4 4 4 c . 
            . . e e 4 4 4 4 4 4 4 c c c . . 
            `,img`
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . 4 e e e . . . . . . 
            . . . . . e e e e e e . . . . . 
            . . . . . . . 4 c . . . . . . . 
            . . . . . . . 4 4 . . . . . . . 
            . . . . . 4 4 4 4 4 4 . . . . . 
            . . e e 4 4 f 4 4 f 4 4 c . . . 
            . e 4 4 4 4 4 4 4 4 4 4 4 c c . 
            . e 4 4 4 4 4 4 4 4 4 4 4 4 c . 
            . . e e 4 4 4 4 4 4 4 c c c . . 
            `],
        500,
        true
        )
        sprites.setDataString(tempSprite, "type", "Potatomine")
        sprites.setDataNumber(tempSprite, "countdown", 8)
        sprites.setDataNumber(tempSprite, "hp", 250)
        listPotatomine.push(tempSprite)
    }
    sprites.setDataNumber(tempSprite, "row", grid.spriteRow(Cursor))
    sprites.setDataNumber(tempSprite, "col", grid.spriteCol(Cursor))
    grid.place(tempSprite, tiles.getTileLocation(grid.spriteCol(Cursor), grid.spriteRow(Cursor)))
    return true
}
function InitGlobal () {
    listPeashooter = []
    listSunflower = []
    listCherrybomb = []
    listWallnut = []
    listPotatomine = []
    listBlast = []
    listSun = []
    listToDelSprite = []
    enemyAppearCD = 2
    listEnemy = []
}
sprites.onOverlap(SpriteKind.OtherIcons, SpriteKind.Food, function (sprite, otherSprite) {
    suns += 50
    sprites.destroy(otherSprite)
    textSunCounter.setText(convertToText(suns))
})
scene.onHitWall(SpriteKind.Enemy, function (sprite, location) {
    game.setGameOverMessage(false, "Zombie ate your BRAIN!")
    game.gameOver(false)
})
function updateIndicatorCD () {
    for (let index5 = 0; index5 <= listPlantIndicator.length - 1; index5++) {
        tempSpriteIndicator = listPlantIndicator[index5]
        tempNum = sprites.readDataNumber(tempSpriteIndicator, "count_cooldown")
        if (tempNum > 0) {
            tempNum += -1
            sprites.setDataNumber(tempSpriteIndicator, "count_cooldown", tempNum)
        }
        if (index5 == selectedPlantNumber) {
            textCoolDown.setText(convertToText(tempNum))
        }
    }
}
function updateEating () {
    tempCounter = 0
    for (let value2 of sprites.allOfKind(SpriteKind.Enemy)) {
        if (sprites.readDataBoolean(value2, "eating")) {
            tempCounter += 1
            tempSprite = sprites.readDataSprite(value2, "eating_plant")
            sprites.changeDataNumberBy(tempSprite, "hp", -40)
        }
    }
    if (tempCounter > 0) {
        if (!(PlayingEatingSound)) {
            PlayingEatingSound = true
        }
    } else {
        if (PlayingEatingSound) {
            PlayingEatingSound = false
            music.stopAllSounds()
        }
    }
    for (let value3 of sprites.allOfKind(SpriteKind.Tower)) {
        if (sprites.readDataNumber(value3, "hp") < 0) {
            listToDelSprite.push(value3)
        }
    }
    while (listToDelSprite.length > 0) {
        tempSprite = listToDelSprite.shift()
        if (sprites.readDataString(tempSprite, "type") == "Peashooter") {
            listPeashooter.removeAt(listPeashooter.indexOf(tempSprite))
        } else if (sprites.readDataString(tempSprite, "type") == "Sunflower") {
            listSunflower.removeAt(listSunflower.indexOf(tempSprite))
        } else if (sprites.readDataString(tempSprite, "type") == "Cherrybomb") {
            listCherrybomb.removeAt(listCherrybomb.indexOf(tempSprite))
        } else if (sprites.readDataString(tempSprite, "type") == "Wallnut") {
            listWallnut.removeAt(listWallnut.indexOf(tempSprite))
        } else if (sprites.readDataString(tempSprite, "type") == "Potatomine") {
            listPotatomine.removeAt(listPotatomine.indexOf(tempSprite))
        }
        for (let value4 of sprites.allOfKind(SpriteKind.Enemy)) {
            if (sprites.readDataBoolean(value4, "eating") && sprites.readDataSprite(value4, "eating_plant") == tempSprite) {
                sprites.setDataBoolean(value4, "eating", false)
                value4.setVelocity(-2, 0)
            }
        }
        sprites.destroy(tempSprite, effects.spray, 500)
    }
}
sprites.onOverlap(SpriteKind.Player, SpriteKind.Food, function (sprite, otherSprite) {
    otherSprite.follow(indSunCounter)
    otherSprite.setFlag(SpriteFlag.GhostThroughWalls, true)
})
function updateCooldown () {
    updateIndicatorCD()
    updatePlantCD()
    updateSunCD()
    updateEnemyCD()
}
function InitIndicator () {
    listPlantIndicator = []
    indPeashooter = sprites.create(img`
        ....................
        ....................
        .....fffff..........
        ...ff77777ff........
        ..f777777777ff...ff.
        .f7777777ff777fff7f.
        .f7777777777777777f.
        .f7777ff777777777f..
        .f777777777777777f..
        .f7777777777777777f.
        ..f777777777ffff77f.
        ...f7777777f....ff..
        ....f7777ff.........
        .....fff7...........
        .......f7..777......
        ..7777..777777......
        ..7777777777........
        ......7777..........
        ....................
        ........77..........
        `, SpriteKind.Indicator)
    sprites.setDataNumber(indPeashooter, "price", 100)
    sprites.setDataNumber(indPeashooter, "max_cooldown", 10)
    sprites.setDataNumber(indPeashooter, "count_cooldown", 0)
    grid.place(indPeashooter, tiles.getTileLocation(0, 0))
    listPlantIndicator.push(indPeashooter)
    indSunflower = sprites.create(img`
        ....................
        ....5...5..5...5....
        ....55..5..5..55....
        .....5........5.....
        .55....55555.....5..
        ..5..555555555..55..
        ....55544444555.....
        ....55444444455.....
        55..55444444455..55.
        ....55544444555.....
        .....555555555......
        ..55....555.....55..
        ......75.5.5........
        ......77.6..77......
        ......7777.77.......
        ......7777776.......
        .......77776........
        ........776.........
        ........77..........
        ........77..........
        `, SpriteKind.Indicator)
    sprites.setDataNumber(indSunflower, "price", 50)
    sprites.setDataNumber(indSunflower, "max_cooldown", 6)
    sprites.setDataNumber(indSunflower, "count_cooldown", 0)
    grid.place(indSunflower, tiles.getTileLocation(1, 0))
    listPlantIndicator.push(indSunflower)
    indCherrybomb = sprites.create(img`
        . . . . . . . . . . . 6 6 6 6 6 
        . . . . . . . . . 6 6 7 7 7 7 8 
        . . . . . . 8 8 8 7 7 8 8 6 8 8 
        . . e e e e c 6 6 8 8 . 8 7 8 . 
        . e 2 5 4 2 e c 8 . . . 6 7 8 . 
        e 2 4 2 2 2 2 2 c . . . 6 7 8 . 
        e 2 2 2 2 2 2 2 c . . . 8 6 8 . 
        e 2 e e 2 2 2 2 e e e e c 6 8 . 
        c 2 e e 2 2 2 2 e 2 5 4 2 c 8 . 
        . c 2 e e e 2 e 2 4 2 2 2 2 c . 
        . . c 2 2 2 e e 2 2 2 2 2 2 2 e 
        . . . e c c e c 2 2 2 2 2 2 2 e 
        . . . . . . . c 2 e e 2 2 e 2 c 
        . . . . . . . c e e e e e e 2 c 
        . . . . . . . . c e 2 2 2 2 c . 
        . . . . . . . . . c c c c c . . 
        `, SpriteKind.Indicator)
    sprites.setDataNumber(indCherrybomb, "price", 150)
    sprites.setDataNumber(indCherrybomb, "max_cooldown", 25)
    sprites.setDataNumber(indCherrybomb, "count_cooldown", 0)
    grid.place(indCherrybomb, tiles.getTileLocation(2, 0))
    listPlantIndicator.push(indCherrybomb)
    indWallnut = sprites.create(img`
        . . . . . . . . . . . . . . . . 
        . . . . . . c c c c . . . . . . 
        . . . . c c 4 4 4 4 c c . . . . 
        . . . . c 4 4 4 4 4 4 c . . . . 
        . . . c 4 5 5 4 4 5 5 4 c . . . 
        . . . c 4 5 5 4 4 5 5 4 c . . . 
        . . c d 4 4 4 4 4 4 4 4 d c . . 
        . . c d 4 4 4 4 4 4 4 4 d c . . 
        . . c 4 5 4 4 4 4 4 5 3 d c . . 
        . . c 4 4 5 4 4 4 5 5 b d c . . 
        . . c 4 4 5 5 5 5 b b b d c . . 
        . . c b 4 4 b b 4 b b 4 b c . . 
        . . . c 4 4 b b 4 4 4 5 c . . . 
        . . . . c b 5 5 5 5 b c . . . . 
        . . . . . c c c c c c . . . . . 
        . . . . . . . . . . . . . . . . 
        `, SpriteKind.Indicator)
    sprites.setDataNumber(indWallnut, "price", 75)
    sprites.setDataNumber(indWallnut, "max_cooldown", 13)
    sprites.setDataNumber(indWallnut, "count_cooldown", 0)
    grid.place(indWallnut, tiles.getTileLocation(3, 0))
    listPlantIndicator.push(indWallnut)
    indPotatomine = sprites.create(img`
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . 4 e e e . . . . . . 
        . . . . . e e e e e e . . . . . 
        . . . . . . . c c . . . . . . . 
        . . . . . . . 4 c . . . . . . . 
        . . . . . . 4 4 4 4 . . . . . . 
        . . . . . 4 4 4 4 4 4 . . . . . 
        . . e e 4 4 4 f 4 4 f 4 c . . . 
        . e 4 4 4 4 4 4 4 4 4 4 4 c c . 
        . e 4 4 4 4 4 4 4 4 4 4 4 4 c . 
        . . e e 4 4 4 4 4 4 4 c c c . . 
        . . . . e e e e e e c c . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        `, SpriteKind.Indicator)
    sprites.setDataNumber(indPotatomine, "price", 25)
    sprites.setDataNumber(indPotatomine, "max_cooldown", 13)
    sprites.setDataNumber(indPotatomine, "count_cooldown", 0)
    grid.place(indPotatomine, tiles.getTileLocation(4, 0))
    listPlantIndicator.push(indPotatomine)
    selectedPlantNumber = 0
    indCursor = sprites.create(img`
        5 5 5 5 5 5 . . . . 5 5 5 5 5 5 
        5 5 5 5 5 5 . . . . 5 5 5 5 5 5 
        5 5 . . . . . . . . . . . . 5 5 
        5 5 . . . . . . . . . . . . 5 5 
        5 5 . . . . . . . . . . . . 5 5 
        5 5 . . . . . . . . . . . . 5 5 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        5 5 . . . . . . . . . . . . 5 5 
        5 5 . . . . . . . . . . . . 5 5 
        5 5 . . . . . . . . . . . . 5 5 
        5 5 . . . . . . . . . . . . 5 5 
        5 5 5 5 5 5 . . . . 5 5 5 5 5 5 
        5 5 5 5 5 5 . . . . 5 5 5 5 5 5 
        `, SpriteKind.Player)
    grid.place(indCursor, tiles.getTileLocation(selectedPlantNumber, 0))
    textPrice = textsprite.create("100", 14, 5)
    textPrice.setPosition(95, 11)
    textTipPrice = textsprite.create("Price", 14, 5)
    textTipPrice.setPosition(95, 3)
    textCoolDown = textsprite.create("100", 14, 5)
    textCoolDown.setPosition(135, 11)
    textTipCoolDown = textsprite.create("CoolDown", 14, 5)
    textTipCoolDown.setPosition(137, 3)
}
sprites.onOverlap(SpriteKind.Tower, SpriteKind.Enemy, function (sprite, otherSprite) {
    if (sprites.readDataString(sprite, "type") == "Potatomine" && sprites.readDataNumber(sprite, "countdown") <= 0) {
        mySprite2 = sprites.create(img`
            . 3 . . . . . . . . . . . 4 . . 
            . 3 3 . . . . . . . . . 4 4 . . 
            . 3 d 3 . . 4 4 . . 4 4 d 4 . . 
            . . 3 5 3 4 5 5 4 4 d d 4 4 . . 
            . . 3 d 5 d 1 1 d 5 5 d 4 4 . . 
            . . 4 5 5 1 1 1 1 5 1 1 5 4 . . 
            . 4 5 5 5 5 1 1 5 1 1 1 d 4 4 . 
            . 4 d 5 1 1 5 5 5 1 1 1 5 5 4 . 
            . 4 4 5 1 1 5 5 5 5 5 d 5 5 4 . 
            . . 4 3 d 5 5 5 d 5 5 d d d 4 . 
            . 4 5 5 d 5 5 5 d d d 5 5 4 . . 
            . 4 5 5 d 3 5 d d 3 d 5 5 4 . . 
            . 4 4 d d 4 d d d 4 3 d d 4 . . 
            . . 4 5 4 4 4 4 4 4 4 4 4 . . . 
            . 4 5 4 . . 4 4 4 . . . 4 4 . . 
            . 4 4 . . . . . . . . . . 4 4 . 
            `, SpriteKind.Blast)
        sprites.setDataNumber(mySprite2, "countdown", 2)
        listBlast.push(mySprite2)
        mySprite2.setPosition(sprite.x, sprite.y)
        animation.runImageAnimation(
        mySprite2,
        [img`
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . 4 4 . . . . . . . 
            . . . . . . 4 5 5 4 . . . . . . 
            . . . . . . 2 5 5 2 . . . . . . 
            . . . . . . . 2 2 . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            `,img`
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . 4 . . . . . 
            . . . . 2 . . . . 4 4 . . . . . 
            . . . . 2 4 . . 4 5 4 . . . . . 
            . . . . . 2 4 d 5 5 4 . . . . . 
            . . . . . 2 5 5 5 5 4 . . . . . 
            . . . . . . 2 5 5 5 5 4 . . . . 
            . . . . . . 2 5 4 2 4 4 . . . . 
            . . . . . . 4 4 . . 2 4 4 . . . 
            . . . . . 4 4 . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            `,img`
            . 3 . . . . . . . . . . . 4 . . 
            . 3 3 . . . . . . . . . 4 4 . . 
            . 3 d 3 . . 4 4 . . 4 4 d 4 . . 
            . . 3 5 3 4 5 5 4 4 d d 4 4 . . 
            . . 3 d 5 d 1 1 d 5 5 d 4 4 . . 
            . . 4 5 5 1 1 1 1 5 1 1 5 4 . . 
            . 4 5 5 5 5 1 1 5 1 1 1 d 4 4 . 
            . 4 d 5 1 1 5 5 5 1 1 1 5 5 4 . 
            . 4 4 5 1 1 5 5 5 5 5 d 5 5 4 . 
            . . 4 3 d 5 5 5 d 5 5 d d d 4 . 
            . 4 5 5 d 5 5 5 d d d 5 5 4 . . 
            . 4 5 5 d 3 5 d d 3 d 5 5 4 . . 
            . 4 4 d d 4 d d d 4 3 d d 4 . . 
            . . 4 5 4 4 4 4 4 4 4 4 4 . . . 
            . 4 5 4 . . 4 4 4 . . . 4 4 . . 
            . 4 4 . . . . . . . . . . 4 4 . 
            `,img`
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . b b . b b b . . . . . 
            . . . . b 1 1 b 1 1 1 b . . . . 
            . . b b 3 1 1 d d 1 d d b b . . 
            . b 1 1 d d b b b b b 1 1 b . . 
            . b 1 1 1 b . . . . . b d d b . 
            . . 3 d d b . . . . . b d 1 1 b 
            . b 1 d 3 . . . . . . . b 1 1 b 
            . b 1 1 b . . . . . . b b 1 d b 
            . b 1 d b . . . . . . b d 3 d b 
            . b b d d b . . . . b d d d b . 
            . b d d d d b . b b 3 d d 3 b . 
            . . b d d 3 3 b d 3 3 b b b . . 
            . . . b b b d d d d d b . . . . 
            . . . . . . b b b b b . . . . . 
            `],
        500,
        false
        )
        listPotatomine.removeAt(listPotatomine.indexOf(sprite))
        sprites.destroy(sprite, effects.spray, 500)
    }
    if (!(sprites.readDataBoolean(otherSprite, "eating"))) {
        if (!(PlayingEatingSound)) {
            PlayingEatingSound = true
            music.play(music.melodyPlayable(music.zapped), music.PlaybackMode.LoopingInBackground)
        }
        sprites.setDataBoolean(otherSprite, "eating", true)
        sprites.setDataSprite(otherSprite, "eating_plant", sprite)
        otherSprite.setVelocity(0, 0)
    }
})
function updateSunCD () {
    for (let index6 = 0; index6 <= listSun.length - 1; index6++) {
        tempSprite = listSun[index6]
        sprites.changeDataNumberBy(tempSprite, "countdown", -1)
        if (sprites.readDataNumber(tempSprite, "countdown") <= 0) {
            listToDelSprite.push(tempSprite)
        }
    }
    while (listToDelSprite.length > 0) {
        tempSprite = listToDelSprite.shift()
        listSun.removeAt(listSun.indexOf(tempSprite))
        sprites.destroy(tempSprite)
    }
}
sprites.onOverlap(SpriteKind.Projectile, SpriteKind.Enemy, function (sprite, otherSprite) {
    sprites.destroy(sprite)
    sprites.changeDataNumberBy(otherSprite, "hp", -20)
    if (sprites.readDataNumber(otherSprite, "hp") <= 0) {
        listEnemy.removeAt(listEnemy.indexOf(otherSprite))
        sprites.destroy(otherSprite, effects.spray, 500)
    }
})
let textTipCoolDown: TextSprite = null
let textTipPrice: TextSprite = null
let indPotatomine: Sprite = null
let indWallnut: Sprite = null
let indCherrybomb: Sprite = null
let indSunflower: Sprite = null
let indPeashooter: Sprite = null
let PlayingEatingSound = false
let tempCounter = 0
let tempNum = 0
let listToDelSprite: Sprite[] = []
let listWallnut: Sprite[] = []
let tempSpriteIndicator: Sprite = null
let mySprite: Sprite = null
let enemyAppearCD = 0
let listEnemy: Sprite[] = []
let listBlast: Sprite[] = []
let listCherrybomb: Sprite[] = []
let listPotatomine: Sprite[] = []
let listSun: Sprite[] = []
let mySprite2: Sprite = null
let listSunflower: Sprite[] = []
let projectile: Sprite = null
let tempSprite: Sprite = null
let listPeashooter: Sprite[] = []
let textCoolDown: TextSprite = null
let listPlantIndicator: Sprite[] = []
let textPrice: TextSprite = null
let selectedPlantNumber = 0
let indCursor: Sprite = null
let indSunCounter: Sprite = null
let textSunCounter: TextSprite = null
let suns = 0
let Cursor: Sprite = null
Cursor = sprites.create(img`
    4 4 4 4 4 4 . . . . 4 4 4 4 4 4 
    4 4 4 4 4 4 . . . . 4 4 4 4 4 4 
    4 4 . . . . . . . . . . . . 4 4 
    4 4 . . . . . . . . . . . . 4 4 
    4 4 . . . . . . . . . . . . 4 4 
    4 4 . . . . . 4 4 . . . . . 4 4 
    . . . . . . . 4 4 . . . . . . . 
    . . . . . 4 4 4 4 4 4 . . . . . 
    . . . . . 4 4 4 4 4 4 . . . . . 
    . . . . . . . 4 4 . . . . . . . 
    4 4 . . . . . 4 4 . . . . . 4 4 
    4 4 . . . . . . . . . . . . 4 4 
    4 4 . . . . . . . . . . . . 4 4 
    4 4 . . . . . . . . . . . . 4 4 
    4 4 4 4 4 4 . . . . 4 4 4 4 4 4 
    4 4 4 4 4 4 . . . . 4 4 4 4 4 4 
    `, SpriteKind.Player)
tiles.setCurrentTilemap(tilemap`level1`)
controller.moveSprite(Cursor)
Cursor.setPosition(92, 31)
Cursor.setStayInScreen(true)
grid.snap(Cursor)
InitIndicator()
suns = 500
textSunCounter = textsprite.create(convertToText(suns), 14, 5)
textSunCounter.setPosition(25, 110)
indSunCounter = sprites.create(img`
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . b d b . . . . . . 
    . . . . . . . b d b c . . . . . 
    . . . . b b c 5 5 5 c b b . . . 
    . . . . b 5 5 5 1 5 5 5 b . . . 
    . . . c c 5 5 5 1 5 5 5 c c . . 
    . . b b 5 5 5 1 1 1 5 5 5 b b . 
    . . d d 5 1 1 1 1 1 1 1 5 d d . 
    . . b b 5 5 5 1 1 1 5 5 5 b b . 
    . . . c c 5 5 5 1 5 5 5 c c . . 
    . . . . b 5 5 5 1 5 5 5 b . . . 
    . . . . b b c 5 5 5 c b b . . . 
    . . . . . . c b d b c . . . . . 
    . . . . . . . b d b . . . . . . 
    . . . . . . . . . . . . . . . . 
    `, SpriteKind.OtherIcons)
indSunCounter.setPosition(10, 110)
game.onUpdateInterval(5000, function () {
    mySprite = sprites.create(img`
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . b . . . . . . . 
        . . . . . . . b d b . . . . . . 
        . . . . . . . c d c . . . . . . 
        . . . . . . . c 5 c . . . . . . 
        . . . . . . c d 5 d c . . . . . 
        . . . b c c d 5 5 5 d c c b . . 
        . . b d d 5 5 5 5 5 5 5 d d b . 
        . . . b c c d 5 5 5 d c c b . . 
        . . . . . . c d 5 d c . . . . . 
        . . . . . . . c 5 c . . . . . . 
        . . . . . . . c d c . . . . . . 
        . . . . . . . b d b . . . . . . 
        . . . . . . . . b . . . . . . . 
        . . . . . . . . . . . . . . . . 
        `, SpriteKind.Food)
    animation.runImageAnimation(
    mySprite,
    [img`
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . b . . . . . . . 
        . . . . . . . b d b . . . . . . 
        . . . . . . . c d c . . . . . . 
        . . . . . . . c 5 c . . . . . . 
        . . . . . . c d 5 d c . . . . . 
        . . . b c c d 5 5 5 d c c b . . 
        . . b d d 5 5 5 5 5 5 5 d d b . 
        . . . b c c d 5 5 5 d c c b . . 
        . . . . . . c d 5 d c . . . . . 
        . . . . . . . c 5 c . . . . . . 
        . . . . . . . c d c . . . . . . 
        . . . . . . . b d b . . . . . . 
        . . . . . . . . b . . . . . . . 
        . . . . . . . . . . . . . . . . 
        `,img`
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . b d b . . . . . . 
        . . . . . . . b d b c . . . . . 
        . . . . b b c 5 5 5 c b b . . . 
        . . . . b 5 5 5 1 5 5 5 b . . . 
        . . . c c 5 5 5 1 5 5 5 c c . . 
        . . b b 5 5 5 1 1 1 5 5 5 b b . 
        . . d d 5 1 1 1 1 1 1 1 5 d d . 
        . . b b 5 5 5 1 1 1 5 5 5 b b . 
        . . . c c 5 5 5 1 5 5 5 c c . . 
        . . . . b 5 5 5 1 5 5 5 b . . . 
        . . . . b b c 5 5 5 c b b . . . 
        . . . . . . c b d b c . . . . . 
        . . . . . . . b d b . . . . . . 
        . . . . . . . . . . . . . . . . 
        `],
    500,
    true
    )
    mySprite.setVelocity(0, 15)
    mySprite.setPosition(randint(30, 140), 0)
    sprites.setDataNumber(mySprite, "countdown", 10)
    listSun.push(mySprite)
})
game.onUpdateInterval(1000, function () {
    updateCooldown()
    updateEating()
})
game.onUpdateInterval(500, function () {
    grid.snap(Cursor)
})
